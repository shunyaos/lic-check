#!/bin/bash

set -e

CSV=0

case "$1" in
  --help|-h)
    cat >&2 <<.e
Lists license of given packages (dpkg -l similar format)

Usage: $0 [-c]

Options:
    -c, --csv    use comma separated values (CSV) output format
    -h, --help   print this message
.e
    exit 1
    ;;
  --csv|-c)
    CSV=1
    ;;
esac

SCRIPTLIB=$(dirname $(readlink -f "$0"))/lib/
test -d "$SCRIPTLIB"

if [[ $CSV -eq 1 ]]
then 
  printf "\"St\",\"Name\",\"Version\",\"Arch\",\"Description\",\"Licenses\"\n"
else 
  format='%-2s  %-30s %-30s %-6s %-60s %s\n'
  printf "$format" "Name" "Version" "Arch" "Description" "Licenses"
  printf "$format" "----" "-------" "----" "-----------" "--------"
fi

cat dependencies.txt | while read pkg 
do
    COLUMNS=2000 dpkg -l ${pkg} | grep '^.[iufhwt]' | while read pState package pVer pArch pDesc; do
    license=
    for method in "$SCRIPTLIB"/reader*; do
        [ -f "$method" ] || continue
        license=$("$method" "$package")
        [ $? -eq 0 ] || exit 1
        [ -n "$license" ] || continue
        # remove line breaks and spaces
        license=$(echo "$license" | tr '\n' ' ' | sed -r -e 's/ +/ /g' -e 's/^ +//' -e 's/ +$//')
        [ -z "$license" ] || break
    done
    [ -n "$license" ] || license='unknown'

    if [[ $CSV -eq 1 ]]
    then
        printf "\"$pState\",\"$package\",\"$pVer\",\"$pArch\",\"$pDesc\",\"$license\"\n"
    else
        printf "$format" "${package:0:30}" "${pVer:0:30}" "${pArch:0:6}" "${pDesc:0:60}" "$license"
    fi 
    done
   
done




 
